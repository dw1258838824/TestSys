<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.student.mapper.StudentMapper">
    
    <resultMap type="Student" id="StudentResult">
        <result property="studentId"    column="student_id"    />
        <result property="studentName"    column="student_name"    />
        <result property="levelId"    column="level_id"    />
        <result property="userId"    column="user_id"    />
        <result property="birthday"    column="birthday"    />
        <result property="sex"    column="sex"    />
        <result property="mobile"    column="mobile"    />
        <result property="wechatId"    column="wechat_id"    />
        <result property="idcard"    column="idcard"    />
        <result property="idcardImg"    column="idcard_img"    />
        <result property="certImg"    column="cert_img"    />
        <result property="ctime"    column="ctime"    />
        <result property="fromUserId"    column="from_user_id"    />
        <result property="faceToken" column="face_token"/>
        <result property="uid" column="uid"/>
        <result property="faceImg" column="face_img"/>
        <result property="parentName" column="parent_name"/>
        
        <result property="params.deptName" column="dept_name"/>
        <result property="params.deptId" column="dept_id"/>
    </resultMap>

    <sql id="selectStudentVo">
		    SELECT
			student_id,
			student_name,
			level_id,
			s.user_id,
			birthday,
			s.sex,
			mobile,
			wechat_id,
			idcard,
			idcard_img,
			cert_img,
			ctime,
			from_user_id,
			face_token,
			uid,
			d.dept_name,
			d.dept_id,
			s.face_img,
			s.parent_name
		FROM
			t_student s
		LEFT JOIN sys_user u ON s.user_id = u.user_id
		LEFT JOIN sys_dept d ON u.dept_id = d.dept_id
    </sql>

    <select id="selectStudentList" parameterType="Student" resultMap="StudentResult">
        <include refid="selectStudentVo"/>
        WHERE 1=1
            <if test="studentName != null  and studentName != ''"> and student_name like concat('%', #{studentName}, '%')</if>
            <if test="levelId != null "> and level_id = #{levelId}</if>
            <if test="userId != null "> and s.user_id = #{userId}</if>
            <if test="birthday != null "> and birthday = #{birthday}</if>
            <if test="sex != null  and sex != ''"> and s.sex = #{sex}</if>
            <if test="mobile != null  and mobile != ''"> and mobile = #{mobile}</if>
            <if test="wechatId != null  and wechatId != ''"> and wechat_id = #{wechatId}</if>
            <if test="idcard != null  and idcard != ''"> and idcard = #{idcard}</if>
            <if test="idcardImg != null  and idcardImg != ''"> and idcard_img = #{idcardImg}</if>
            <if test="certImg != null  and certImg != ''"> and cert_img = #{certImg}</if>
            <if test="ctime != null "> and ctime = #{ctime}</if>
            <if test="fromUserId != null "> and from_user_id = #{fromUserId}</if>
            <if test="deptId != null and deptId != ''">
            	and (d.dept_id IN ( SELECT dept_id FROM sys_dept WHERE dept_id = #{deptId} or find_in_set( #{deptId} , ancestors ) ))
            </if>
            <if test="parentName != null and parentName != ''">and s.parent_name = #{parentName}</if>
            <if test="params.notExamId != null and params.notExamId != ''"> <!-- 不包含已报名或已批量申请报名的学员 -->
            	and s.student_id not in (select student_id from t_dept_reg where exam_id = #{params.notExamId} and operate_state != 2 )
            	and s.student_id not in (select student_id from t_exam_register where exam_id = #{params.notExamId} )
            </if>
			<!-- 数据范围过滤 -->
			${params.dataScope}
    </select>
    
    <select id="selectStudentById" parameterType="Long" resultMap="StudentResult">
        <include refid="selectStudentVo"/>
        where student_id = #{studentId}
    </select>

    <select id="selectStudentByMobile" parameterType="String" resultMap="StudentResult">
        <include refid="selectStudentVo"/>
        where mobile = #{mobile}
    </select>
    
    <select id="selectUserById" parameterType="Long" resultMap="StudentResult">
        <include refid="selectStudentVo"/>
        where s.user_id = #{userId}
    </select>

    <select id="selectStudentByWeChatId" parameterType="Student" resultMap="StudentResult">
        <include refid="selectStudentVo"/>
        where wechat_id = #{wechatId}
    </select>
        
    <insert id="insertStudent" parameterType="Student" useGeneratedKeys="true" keyProperty="studentId">
        insert into t_student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentName != null  and studentName != ''">student_name,</if>
            <if test="levelId != null ">level_id,</if>
            <if test="userId != null ">user_id,</if>
            <if test="birthday != null ">birthday,</if>
            <if test="sex != null  and sex != ''">sex,</if>
            <if test="mobile != null  and mobile != ''">mobile,</if>
            <if test="wechatId != null  and wechatId != ''">wechat_id,</if>
            <if test="idcard != null  and idcard != ''">idcard,</if>
            <if test="idcardImg != null  and idcardImg != ''">idcard_img,</if>
            <if test="certImg != null  and certImg != ''">cert_img,</if>
            <if test="ctime != null ">ctime,</if>
            <if test="fromUserId != null ">from_user_id,</if>
            <if test="uid != null  and uid != '' ">uid ,</if>
            <if test="faceImg != null  and faceImg != '' ">face_img ,</if>
            <if test="parentName != null and parentName != ''">parent_name, </if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentName != null  and studentName != ''">#{studentName},</if>
            <if test="levelId != null ">#{levelId},</if>
            <if test="userId != null ">#{userId},</if>
            <if test="birthday != null ">#{birthday},</if>
            <if test="sex != null  and sex != ''">#{sex},</if>
            <if test="mobile != null  and mobile != ''">#{mobile},</if>
            <if test="wechatId != null  and wechatId != ''">#{wechatId},</if>
            <if test="idcard != null  and idcard != ''">#{idcard},</if>
            <if test="idcardImg != null  and idcardImg != ''">#{idcardImg},</if>
            <if test="certImg != null  and certImg != ''">#{certImg},</if>
            <if test="ctime != null ">#{ctime},</if>
            <if test="fromUserId != null ">#{fromUserId},</if>
            <if test="uid != null  and uid != '' ">#{uid},</if>
            <if test="faceImg != null  and faceImg != '' ">#{faceImg} ,</if>
            <if test="parentName != null and parentName != ''">#{parentName}, </if>
         </trim>
    </insert>

    <update id="updateStudent" parameterType="Student">
        update t_student
        <trim prefix="SET" suffixOverrides=",">
            <if test="studentName != null  and studentName != ''">student_name = #{studentName},</if>
            <if test="levelId != null ">level_id = #{levelId},</if>
            <if test="userId != null ">user_id = #{userId},</if>
            <if test="birthday != null ">birthday = #{birthday},</if>
            <if test="sex != null  and sex != ''">sex = #{sex},</if>
            <if test="mobile != null  and mobile != ''">mobile = #{mobile},</if>
            <if test="wechatId != null  and wechatId != ''">wechat_id = #{wechatId},</if>
            <if test="idcard != null  and idcard != ''">idcard = #{idcard},</if>
            <if test="idcardImg != null  and idcardImg != ''">idcard_img = #{idcardImg},</if>
            <if test="certImg != null  and certImg != ''">cert_img = #{certImg},</if>
            <if test="ctime != null ">ctime = #{ctime},</if>
            <if test="fromUserId != null ">from_user_id = #{fromUserId},</if>
            <if test="uid != null  and uid != '' ">uid = #{uid},</if>
            <if test="faceToken != null  and faceToken != '' ">face_token = #{faceToken},</if>
            <if test="faceImg != null  and faceImg != '' ">face_img = #{faceImg} ,</if>
            <if test="parentName != null and parentName != ''">parent_name = #{parentName}, </if>
        </trim>
        where student_id = #{studentId}
    </update>

    <update id="updateWeChatIdByStudent" parameterType="Student">
        update t_student
        <trim prefix="SET" suffixOverrides=",">
            wechat_id = #{wechatId}
        </trim>
        where student_id = #{studentId}
    </update>
    
    <update id="updateFaceTokenByStudent" parameterType="Student">
    	update t_student
        <trim prefix="SET" suffixOverrides=",">
            face_token = #{faceToken},
            <if test="faceImg != null  and faceImg != '' ">face_img = #{faceImg} ,</if>
        </trim>
        where student_id = #{studentId}
    </update>
    

    <delete id="deleteStudentById" parameterType="Long">
        delete from t_student where student_id = #{studentId}
    </delete>

    <delete id="deleteStudentByIds" parameterType="String">
        delete from t_student where student_id in 
        <foreach item="studentId" collection="array" open="(" separator="," close=")">
            #{studentId}
        </foreach>
    </delete>


    <select id="selectStudentLevel" parameterType="StudentLevel" resultType="StudentLevel">
        SELECT
            student_id AS studentId,
            subject_id AS subjectId,
            s.level_id AS levelId,
            l.level_value AS levelValue
        FROM t_student_level s
        LEFT JOIN t_level AS l ON s.level_id = l.level_id
        <where>
            <if test="studentId != null">
                s.student_id = #{studentId}
            </if>
            <if test="subjectId != null">
                AND s.subject_id = #{subjectId}
            </if>
        </where>
    </select>
    
    <select id="selectStudentLevelInfo" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
			sl.student_id,
			sl.level_id,
			sl.subject_id,
			s.subject_name,
			l.level_name,
			l.level_value
		FROM
			`t_student_level` sl
			LEFT JOIN t_subject s ON s.subject_id = sl.subject_id
			LEFT JOIN t_level l ON l.level_id = sl.level_id
        <where>
            <if test="studentId != null and studentId != '' ">
                sl.student_id = #{studentId}
            </if>
        </where>
    </select>
    <select id="checkAnyThingUnique" parameterType="Student" resultType="int">
		select count(1) from t_student
		<where>
			<if test="studentId != null and studentId != ''">
				and student_id != #{studentId}
			</if>
			<if test="mobile != null and mobile != ''">
				and mobile = #{mobile}
			</if>
			<if test="idcard != null and idcard != ''">
				and idcard = #{idcard}
			</if>
		</where>
	</select>
    
    <select id="selectStudentByIdcard" parameterType="String" resultMap="StudentResult">
        <include refid="selectStudentVo"/>
        where idcard = #{idcard}
    </select>
    
    <delete id="deleteFaceStudentByIds" parameterType="String">
        update t_student set face_token = null,face_img = null  where student_id in 
        <foreach item="studentId" collection="array" open="(" separator="," close=")">
            #{studentId}
        </foreach>
    </delete>
    
    <update id="updateStudentLevel" >
    	update t_student_level set level_id = #{levelId}
        where student_id = #{studentId}  and subject_id = #{subjectId}
    </update>
</mapper>