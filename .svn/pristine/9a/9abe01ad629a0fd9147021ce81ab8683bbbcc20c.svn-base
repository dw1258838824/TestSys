package com.ruoyi.framework.shiro.service;

import java.util.ArrayList;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.util.StringUtils;
import com.ruoyi.common.constant.Constants;
import com.ruoyi.common.constant.ShiroConstants;
import com.ruoyi.common.constant.UserConstants;
import com.ruoyi.common.utils.MessageUtils;
import com.ruoyi.common.utils.ServletUtils;
import com.ruoyi.framework.manager.AsyncManager;
import com.ruoyi.framework.manager.factory.AsyncFactory;
import com.ruoyi.project.system.student.domain.Student;
import com.ruoyi.project.system.student.service.IStudentService;
import com.ruoyi.project.system.user.domain.User;
import com.ruoyi.project.system.user.domain.UserRole;
import com.ruoyi.project.system.user.mapper.UserRoleMapper;
import com.ruoyi.project.system.user.service.IUserService;
import com.testsys.common.Cache;

/**
 * 注册校验方法
 * 
 * @author ruoyi
 */
@Component
public class RegisterService
{
    @Autowired
    private IUserService userService;
    @Autowired
    private IStudentService studentService;
    @Autowired
    private UserRoleMapper userRoleMapper;

    @Value("${student.roleIds:#{null}}")
    private String roleIds;
    
    /**
     * 注册
     */
    @Transactional
    public String register(User user)
    {
        String msg = "", username = user.getLoginName(), password = user.getPassword();
        String captcha = String.valueOf(Cache.get(user.getLoginName()));
        if(null == captcha) {
        	msg = "验证码已过期";
        }
        if(!captcha.equals(user.getPhoneCode())) {
        	msg = "验证码错误";
        }
		/*
		 * if
		 * (!StringUtils.isEmpty(ServletUtils.getRequest().getAttribute(ShiroConstants.
		 * CURRENT_CAPTCHA))) { msg = "验证码错误"; }
		 */
        else if (StringUtils.isEmpty(username))
        {
            msg = "用户名不能为空";
        }
        else if (StringUtils.isEmpty(password))
        {
            msg = "用户密码不能为空";
        }
        else if (password.length() < UserConstants.PASSWORD_MIN_LENGTH
                || password.length() > UserConstants.PASSWORD_MAX_LENGTH)
        {
            msg = "密码长度必须在5到20个字符之间";
        }
        else if (username.length() < UserConstants.USERNAME_MIN_LENGTH
                || username.length() > UserConstants.USERNAME_MAX_LENGTH)
        {
            msg = "账户长度必须在2到20个字符之间";
        }
        else if (UserConstants.USER_NAME_NOT_UNIQUE.equals(userService.checkLoginNameUnique(username)))
        {
            msg = "保存用户'" + username + "'失败，注册账号已存在";
        }
        else
        {
            boolean regFlag = userService.registerUser(user);
            if (!regFlag)
            {
                msg = "注册失败,请联系系统管理人员";
            }
            else
            {
            	//添加用户
            	Student student = user.getStudent() == null ? new Student():user.getStudent();
            	student.setUserId(user.getUserId());
            	studentService.insertStudent(student);
            	// 新增用户与角色管理
            	if(com.ruoyi.common.utils.StringUtils.isNotEmpty(roleIds)) {
            		List<UserRole> list = new ArrayList<UserRole>();
            		String[] ro = roleIds.split(",");
                    for (String roleId : ro){
                        UserRole ur = new UserRole();
                        ur.setUserId(user.getUserId());
                        ur.setRoleId(Long.parseLong(roleId));
                        list.add(ur);
                    }
                    if (list.size() > 0){
                        userRoleMapper.batchUserRole(list);
                    }
            	}
            	//注册成功后删除验证码
            	Cache.remove(user.getLoginName());
                AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.REGISTER, MessageUtils.message("user.register.success")));
            }
        }
        return msg;
    }
}
