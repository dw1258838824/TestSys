package com.ruoyi.project.system.user.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.subject.Subject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.google.common.collect.Lists;
import com.ruoyi.common.constant.Constants;
import com.ruoyi.common.constant.NoticeConstants;
import com.ruoyi.common.utils.CacheUtils;
import com.ruoyi.common.utils.ServletUtils;
import com.ruoyi.common.utils.StringUtils;
import com.ruoyi.framework.web.controller.BaseController;
import com.ruoyi.framework.web.domain.AjaxResult;
import com.ruoyi.project.system.config.domain.Config;
import com.ruoyi.project.system.config.service.IConfigService;
import com.ruoyi.project.system.notice.domain.Notice;
import com.ruoyi.project.system.notice.service.INoticeService;
import com.ruoyi.project.system.student.domain.Student;
import com.ruoyi.project.system.student.service.IStudentService;
import com.ruoyi.project.system.user.domain.User;

/**
 * 登录验证
 * 
 * @author ruoyi
 */
@Controller
@SuppressWarnings("unused")
public class LoginController extends BaseController
{

    @Autowired
    private IStudentService studentService;
    @Autowired
    private INoticeService noticeService;
    @Autowired
    private IConfigService configService;

    @GetMapping("/login")
    public String login(HttpServletRequest request, HttpServletResponse response,ModelMap mmap)
    {
        // 如果是Ajax请求，返回Json字符串。
        if (ServletUtils.isAjaxRequest(request))
        {
            return ServletUtils.renderString(response, "{\"code\":\"1\",\"msg\":\"未登录或登录超时。请重新登录\"}");
        }
        List<Notice> list = null;
        if(null!=NoticeConstants.NOTICES) {
        	list = NoticeConstants.NOTICES;
        }else {
        	list = noticeService.selectNoticeList(null);
        	NoticeConstants.NOTICES = list;
        }
        if(list.size()>10) {
        	list = list.subList(0, 10);
        }
        mmap.put("notices", list);
        mmap.put("callMeInfo", CacheUtils.get(getConfigCacheName(), getConfigCacheKey("call_me_info")));
        mmap.put("friendLines", CacheUtils.get(getConfigCacheName(), getConfigCacheKey("friend_lines")));
       	mmap.put("flag", request.getParameter("flag"));
        return "login";
    }
    /**
     * 获取cache name
     * 
     * @return 缓存名
     */
	public static String getConfigCacheName()
    {
        return Constants.SYS_CONFIG_CACHE;
    }

    /**
     * 设置cache key
     * 
     * @param configKey 参数键
     * @return 缓存键key
     */
	public static String getConfigCacheKey(String configKey)
    {
        return Constants.SYS_CONFIG_KEY + configKey;
    }
    
    @PostMapping("/login")
    @ResponseBody
    public AjaxResult ajaxLogin(String username, String password, Boolean rememberMe)
    {
        UsernamePasswordToken token = new UsernamePasswordToken(username, password, rememberMe);
        Subject subject = SecurityUtils.getSubject();
        try
        {
            subject.login(token);
            User user = getSysUser();
            if("01".equals(user.getUserType())) {
                Student student = studentService.selectUserById(getUserId());
                user.setStudent(student);
                setSysUser(user);
            }
            return success();
        }
        catch (AuthenticationException e)
        {
            String msg = "用户或密码错误";
            if (StringUtils.isNotEmpty(e.getMessage()))
            {
                msg = e.getMessage();
            }
            return error(msg);
        }
    }

    @GetMapping("/unauth")
    public String unauth()
    {
        return "error/unauth";
    }
    public static void main(String[] args) {
		List<String> arrayList = Lists.newArrayList();
		arrayList.add("a");
		arrayList.add("b");
		arrayList.add("c");
		arrayList.add("d");
		arrayList = arrayList.subList(0, 2);
		System.out.println(arrayList);
	}
}
