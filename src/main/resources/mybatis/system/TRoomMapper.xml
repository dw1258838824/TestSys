<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.room.mapper.TRoomMapper">
    
    <resultMap type="TRoom" id="TRoomResult">
        <result property="roomId"    column="room_id"    />
        <result property="roomName"    column="room_name"    />
        <result property="roomType"    column="room_type"    />
        <result property="ctime"    column="ctime"    />
        <result property="teacherUserId"    column="teacher_user_id"    />
        <result property="examId"    column="exam_id"    />
        
        <result property="params.examTitle"    column="exam_title"    />
        <result property="params.state"    column="state"    />
        <result property="params.teacherUserName"    column="user_name"    />
        <result property="params.studentCount"    column="student_count"    />
        
    </resultMap>

    <sql id="selectTRoomVo">
       select 	room_id,
				room_name,
				room_type,
				ctime,
				teacher_user_id,
				exam_id,
				exam_title,
				user_name,
				state,
				student_count
	   from (
	       SELECT
				r.room_id,
				r.room_name,
				r.room_type,
				r.ctime,
				r.teacher_user_id,
				r.exam_id,
				e.exam_title,
				u.user_name,
				e.state,
				COUNT(er.exam_register_id) student_count
			FROM
				t_room r
			LEFT JOIN t_exam e ON r.exam_id = e.exam_id
			LEFT JOIN sys_user u ON u.user_id = r.teacher_user_id
			LEFT JOIN t_exam_register er ON er.room_id = r.room_id
			GROUP BY er.room_id
		)r
    </sql>

    <select id="selectTRoomList" parameterType="TRoom" resultMap="TRoomResult">
        <include refid="selectTRoomVo"/>
        <where>  
            <if test="roomName != null  and roomName != ''"> and r.room_name like concat('%', #{roomName}, '%')</if>
            <if test="roomType != null  and roomType != ''"> and r.room_type = #{roomType}</if>
            <if test="teacherUserId != null "> and r.teacher_user_id = #{teacherUserId}</if>
            <if test="examId != null "> and r.exam_id = #{examId} </if>
            <if test="params.teacherUserName != null  and params.teacherUserName != ''"> and r.user_name like concat('%', #{params.teacherUserName}, '%')</if>
        </where>
        ORDER BY r.room_id DESC
    </select>
    
    <select id="selectTRoomById" parameterType="Long" resultMap="TRoomResult">
        <include refid="selectTRoomVo"/>
        where r.room_id = #{roomId}
    </select>
        
    <insert id="insertTRoom" parameterType="TRoom" useGeneratedKeys="true" keyProperty="roomId">
        insert into t_room
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roomName != null  and roomName != ''">room_name,</if>
            <if test="roomType != null  and roomType != ''">room_type,</if>
            <if test="ctime != null ">ctime,</if>
            <if test="teacherUserId != null ">teacher_user_id,</if>
            <if test="examId != null ">exam_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roomName != null  and roomName != ''">#{roomName},</if>
            <if test="roomType != null  and roomType != ''">#{roomType},</if>
            <if test="ctime != null ">#{ctime},</if>
            <if test="teacherUserId != null ">#{teacherUserId},</if>
            <if test="examId != null ">#{examId},</if>
         </trim>
    </insert>

    <update id="updateTRoom" parameterType="TRoom">
        update t_room
        <trim prefix="SET" suffixOverrides=",">
            <if test="roomName != null  and roomName != ''">room_name = #{roomName},</if>
            <if test="roomType != null  and roomType != ''">room_type = #{roomType},</if>
            <if test="ctime != null ">ctime = #{ctime},</if>
            <if test="teacherUserId != null ">teacher_user_id = #{teacherUserId},</if>
            <if test="examId != null ">exam_id = #{examId},</if>
        </trim>
        where room_id = #{roomId}
    </update>

    <delete id="deleteTRoomById" parameterType="Long">
        delete from t_room where room_id = #{roomId}
    </delete>

    <delete id="deleteTRoomByIds" parameterType="String">
        delete from t_room where room_id in 
        <foreach item="roomId" collection="array" open="(" separator="," close=")">
            #{roomId}
        </foreach>
    </delete>
    
</mapper>